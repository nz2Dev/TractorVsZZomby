//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""1023df72-e8e9-4568-a131-29d764f91c5d"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""9cc177fe-5350-475e-a16c-cf22594f3091"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""46bbbc9c-0335-4d5b-9307-30f4c0221a26"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Break"",
                    ""type"": ""Button"",
                    ""id"": ""f2d1cb37-653e-4787-a16c-ebabd155aca1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireMode"",
                    ""type"": ""Button"",
                    ""id"": ""0184fd7e-7dfe-4c65-86d1-d06d395080ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""4b1493e1-b7f2-4778-805f-51ac2eb31be0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EngageCamera"",
                    ""type"": ""Button"",
                    ""id"": ""542a58db-38aa-417a-88ef-a74f809b8c51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EngageSteering"",
                    ""type"": ""Button"",
                    ""id"": ""712a2185-4ba9-4511-9029-1a336097995e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EngageWorld"",
                    ""type"": ""Button"",
                    ""id"": ""b65182d1-ccbd-4033-8cde-13995e5a7a79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateTractor"",
                    ""type"": ""Button"",
                    ""id"": ""7b3216ac-43f1-40bf-a25f-84975e329196"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e430320b-ba19-400b-80bd-8c439c1387f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""469deaec-cc4f-4207-8f9b-8843c1cfe720"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b5680244-2bac-43af-91a1-6f3f93b63566"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""261db792-b706-433c-bccc-7ce28f0e2f1d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7281dd47-7b88-4ab0-a5e3-88759079b464"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7dd61798-6076-4d44-848f-3b1c1a323f07"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0c12da99-217c-4734-854a-a461a003202c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f02e25bf-5314-439a-b7a6-031e6fdf4095"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d6c761a8-963f-40d9-8d5f-02594e77314b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""69348d55-3859-485e-8547-6a4f91d186ec"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""014742a5-a692-41ba-9cda-959ce4597932"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Break"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ca6ebc8-a04d-40fc-af61-031849b2a677"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EngageCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32d83d19-5cac-4153-aa84-2e9e9adf4690"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EngageSteering"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faaabfce-8df5-4c8b-819a-85e0ab18fa89"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EngageWorld"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54b5eafa-1ef3-4850-9ed5-e3b9bc3d5d65"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17ef760f-aff7-495a-a73c-bb4856714239"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""FireMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""336bb647-cc1f-48e7-99ff-4f623783416c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ActivateTractor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GamePlay
        m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
        m_GamePlay_Look = m_GamePlay.FindAction("Look", throwIfNotFound: true);
        m_GamePlay_Move = m_GamePlay.FindAction("Move", throwIfNotFound: true);
        m_GamePlay_Break = m_GamePlay.FindAction("Break", throwIfNotFound: true);
        m_GamePlay_FireMode = m_GamePlay.FindAction("FireMode", throwIfNotFound: true);
        m_GamePlay_Reload = m_GamePlay.FindAction("Reload", throwIfNotFound: true);
        m_GamePlay_EngageCamera = m_GamePlay.FindAction("EngageCamera", throwIfNotFound: true);
        m_GamePlay_EngageSteering = m_GamePlay.FindAction("EngageSteering", throwIfNotFound: true);
        m_GamePlay_EngageWorld = m_GamePlay.FindAction("EngageWorld", throwIfNotFound: true);
        m_GamePlay_ActivateTractor = m_GamePlay.FindAction("ActivateTractor", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay
    private readonly InputActionMap m_GamePlay;
    private IGamePlayActions m_GamePlayActionsCallbackInterface;
    private readonly InputAction m_GamePlay_Look;
    private readonly InputAction m_GamePlay_Move;
    private readonly InputAction m_GamePlay_Break;
    private readonly InputAction m_GamePlay_FireMode;
    private readonly InputAction m_GamePlay_Reload;
    private readonly InputAction m_GamePlay_EngageCamera;
    private readonly InputAction m_GamePlay_EngageSteering;
    private readonly InputAction m_GamePlay_EngageWorld;
    private readonly InputAction m_GamePlay_ActivateTractor;
    public struct GamePlayActions
    {
        private @GameInputActions m_Wrapper;
        public GamePlayActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_GamePlay_Look;
        public InputAction @Move => m_Wrapper.m_GamePlay_Move;
        public InputAction @Break => m_Wrapper.m_GamePlay_Break;
        public InputAction @FireMode => m_Wrapper.m_GamePlay_FireMode;
        public InputAction @Reload => m_Wrapper.m_GamePlay_Reload;
        public InputAction @EngageCamera => m_Wrapper.m_GamePlay_EngageCamera;
        public InputAction @EngageSteering => m_Wrapper.m_GamePlay_EngageSteering;
        public InputAction @EngageWorld => m_Wrapper.m_GamePlay_EngageWorld;
        public InputAction @ActivateTractor => m_Wrapper.m_GamePlay_ActivateTractor;
        public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
        public void SetCallbacks(IGamePlayActions instance)
        {
            if (m_Wrapper.m_GamePlayActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLook;
                @Move.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMove;
                @Break.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBreak;
                @Break.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBreak;
                @Break.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBreak;
                @FireMode.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFireMode;
                @FireMode.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFireMode;
                @FireMode.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFireMode;
                @Reload.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnReload;
                @EngageCamera.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageCamera;
                @EngageCamera.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageCamera;
                @EngageCamera.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageCamera;
                @EngageSteering.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageSteering;
                @EngageSteering.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageSteering;
                @EngageSteering.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageSteering;
                @EngageWorld.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageWorld;
                @EngageWorld.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageWorld;
                @EngageWorld.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnEngageWorld;
                @ActivateTractor.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnActivateTractor;
                @ActivateTractor.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnActivateTractor;
                @ActivateTractor.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnActivateTractor;
            }
            m_Wrapper.m_GamePlayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Break.started += instance.OnBreak;
                @Break.performed += instance.OnBreak;
                @Break.canceled += instance.OnBreak;
                @FireMode.started += instance.OnFireMode;
                @FireMode.performed += instance.OnFireMode;
                @FireMode.canceled += instance.OnFireMode;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @EngageCamera.started += instance.OnEngageCamera;
                @EngageCamera.performed += instance.OnEngageCamera;
                @EngageCamera.canceled += instance.OnEngageCamera;
                @EngageSteering.started += instance.OnEngageSteering;
                @EngageSteering.performed += instance.OnEngageSteering;
                @EngageSteering.canceled += instance.OnEngageSteering;
                @EngageWorld.started += instance.OnEngageWorld;
                @EngageWorld.performed += instance.OnEngageWorld;
                @EngageWorld.canceled += instance.OnEngageWorld;
                @ActivateTractor.started += instance.OnActivateTractor;
                @ActivateTractor.performed += instance.OnActivateTractor;
                @ActivateTractor.canceled += instance.OnActivateTractor;
            }
        }
    }
    public GamePlayActions @GamePlay => new GamePlayActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    public interface IGamePlayActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnBreak(InputAction.CallbackContext context);
        void OnFireMode(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnEngageCamera(InputAction.CallbackContext context);
        void OnEngageSteering(InputAction.CallbackContext context);
        void OnEngageWorld(InputAction.CallbackContext context);
        void OnActivateTractor(InputAction.CallbackContext context);
    }
}
